version: '3'

services:
  calisthenicsgoddb:
    container_name: calisthenicsGodDB
    image: mongo
    restart: on-failure
    volumes:
      - ../data:/data/db
    ports:
      - '27017:27017'
    expose:
      - 27017
    networks:
      - app-network
  backend:
    build:
      context: ../backend
      dockerfile: ./Dockerfile
    image: backend
    container_name: calisthenicsGodBackend
    restart: unless-stopped
    ports:
      - '8080:8080'
    expose:
      - 8080
    volumes:
      - .:/home/node/app
      - node_modules:/home/node/app/node_modules
    environment:
      - DB_CONNECT=${DB_CONNECT}
      - PORT=${PORT}
      - TOKEN_SECRET=${TOKEN_SECRET}
    networks:
      - app-network
  website:
    build:
      context: ../website
      dockerfile: ./Dockerfile
    image: website
    container_name: calisthenicsGodWebsite
    restart: unless-stopped
    ports:
      - '5000:5000'
    expose:
      - 5000
    volumes:
      - .:/home/node/app
      - node_modules:/home/node/app/node_modules
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL}
    networks:
      - app-network
  caddy:
    image: caddy/caddy:2.2.1-alpine
    container_name: caddy-service
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - $PWD/Caddyfile:/etc/caddy/Caddyfile
      - $PWD/site:/srv
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - backend
      - website
    networks:
      - app-network

volumes:
  dbdata:
  node_modules:
  caddy_data:
  caddy_config:

networks:
  app-network:
    driver: bridge

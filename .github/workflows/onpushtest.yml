name: Build, Test on Push
on: push
jobs:
  buildAPI:
    name: Build API
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    steps:
      - uses: actions/checkout@v1
      - name: build and deploy
        run: |
          sudo docker-compose --env-file ./config/.env.test build backend calisthenicsgoddb
          sudo docker-compose --env-file ./config/.env.test up -d backend calisthenicsgoddb
  buildWebsite:
    name: Build Website
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    steps:
      - uses: actions/checkout@v1
      - name: Build front end
        run: |
          npm ci
          npm run build
        working-directory: ./website
      - name: deploy for test
        run: |
          sudo docker-compose --env-file ./config/.env.test build website backend calisthenicsgoddb
          sudo docker-compose --env-file ./config/.env.test up -d website backend calisthenicsgoddb
  buildAPK:
    name: Build APK
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./CGod
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1.4.0
      - run: flutter pub get
      - run: flutter build apk --debug --split-per-abi
      # - name: Create a Release APK
      #   uses: ncipollo/release-action@v1
      #   with:
      #     artifacts: "build/app/outputs/apk/debug/*.apk"
      #     token: "mqiwowEVmewmvoiw9238u498u43g£F£$39034093#;][."
  buildIOS:
    name: Build IOS
    runs-on: macos-latest
    defaults:
      run:
        working-directory: ./CGod
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1.4.0
      - run: flutter pub get
      - run: flutter build ios --release --no-codesign
      # - name: Create a Release APK
      #   uses: ncipollo/release-action@v1
      #   with:
      #     artifacts: "build/app/outputs/apk/debug/*.apk"
      #     token: "mqiwowEVmewmvoiw9238u498u43g£F£$39034093#;][."
  testAPI:
    name: Test API
    needs: buildAPI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    steps:
      - uses: actions/checkout@v1
      - name: deploy for test
        run: |
          sudo docker-compose --env-file ./config/.env.test build backend calisthenicsgoddb
          sudo docker-compose --env-file ./config/.env.test up -d backend calisthenicsgoddb
      - name: install
        run: npm ci
        working-directory: ./backend
      - name: test
        run: npm run test
        working-directory: ./backend
  testWebsite:
    name: Test Website
    needs: [buildWebsite, buildAPI]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    steps:
      - uses: actions/checkout@v1
      - name: Build front end
        run: |
          npm ci
          npm run build
        working-directory: ./website
      - name: deploy for test
        run: |
          sudo docker-compose --env-file ./config/.env.test build website backend calisthenicsgoddb
          sudo docker-compose --env-file ./config/.env.test up -d website backend calisthenicsgoddb
      - name: install
        run: npm ci
        working-directory: ./website
      - name: Wait for deploy
        run: sleep 10s
      - name: test
        run: npm run test
        working-directory: ./website
  testApp:
    name: Test App
    needs: [buildIOS, buildAPK, buildAPI]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./CGod
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1.4.0
      - run: flutter pub get
      - run: flutter test
